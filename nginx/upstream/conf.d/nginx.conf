# 参考：
# - http://nginx.org/en/docs/http/ngx_http_upstream_module.html
# - http://nginx.org/en/docs/http/ngx_http_proxy_module.html

upstream backend {
  least_conn;
  # 默认值 max_fails=1 fail_timeout=10s
  server localhost:8001 max_fails=0;
  server localhost:8002 backup;
  server localhost:8003 backup;

  # 只有一个 server，且 max_fails=1 时，失败一次后，会一直 no live upstreams 而 502 直到 fail_timeout
  # server localhost:8001;
}


log_format  log8000  '8000 $remote_addr - [$time_local] "$request" $status "$http_x_forwarded_for"';
server {
  listen 8000;

  location / {
    resolver dnsmasq;
    access_log log8000;
    proxy_pass http://backend;
    # 默认值：error timeout
    proxy_next_upstream error timeout http_500;
  }
}

log_format  log8001  '8001 $remote_addr - [$time_local] "$request" $status "$http_x_forwarded_for"';
server {
  listen 8001;
  location / {
    access_log /dev/stdout log8001;

    # - 若 max_fails=0，此 server 不会被标记为不可用，所有请求始终会走这里
    # - 当 idempotent 请求走到这里时，因为 proxy_next_upstream 包括了 500，所以会尝试下一个 server，请求最终成功
    # - 当 non-idempotent 请求（POST 、LOCK 、PATCH）走到这里时，请求失败，不会尝试下一个 server
    # return 500;

    # 模拟 upstream prematurely closed connection while reading response header from upstream
    # 属于 proxy_next_upstream 中的 error，所以效果同上面的 500
    return 444;
  }
}

log_format  log8002  '8002 $remote_addr - [$time_local] "$request" $status "$http_x_forwarded_for"';
server {
  listen 8002;
  location / {
    access_log /dev/stdout log8002;
    return 200 '8002';
  }
}

log_format  log8003  '8003 $remote_addr - [$time_local] "$request" $status "$http_x_forwarded_for"';
server {
  listen 8003;
  location / {
    access_log /dev/stdout log8003;
    return 200 '8003';
  }
}
